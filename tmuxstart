#!/bin/sh

SCPT_NAME=$(basename $0)
SESSIONS_DIR=${TMUXSTART_DIR:-$HOME/.$SCPT_NAME}
GLOBALS_DIR="$SESSIONS_DIR/globals"
LOCALS_DIR="$SESSIONS_DIR/locals"
EXAMPLES_DIR="$SESSIONS_DIR/examples"

# colors
RESET='\033[0m'; G='\033[0;32m'; Y='\033[0;33m'; R='\033[0;31m'


if ! type tmux > /dev/null; then echo -e  "$R tmux not found or not in your PATH $RESET"; fi
# local functions

# Print _usage information if there's not enough arguments
_usage() {
    echo "Usage: $SCPT_NAME session_name       -- $Y Start/Attach session $RESET\n"
    echo "$SCPT_NAME options:"
    echo "=================="
    echo " -h | --help | help                       -- $Y Print help menu $RESET"
    echo " --list | ls                              -- $Y List all available session files $RESET"
    echo " -o session_name [-l]                     -- $Y Edit [local] session file $RESET"
    echo " -n session_name [-l] [-e example_file]   -- $Y Create [local] session file [ from example ]$RESET"
    echo " -c session_name                          -- $Y Copy session file to global directory $RESET"
    echo " -d session_name                          -- $Y Delete session file $RESET"
    echo " -v | --version                           -- $Y Print $SCPT_NAME version number $RESET"
}

[ $# -lt 1 ] && _usage && exit 1


_print_sessions_array() {
    local sessions_array
    sessions_array=$*
    for session in ${sessions_array[*]}; do
        # remove session_file from running_sessions array
        sessions=(${sessions[*]//*$session*})
        if tmux has-session -t "$session" 2> /dev/null ; then session="$session $G(running)$RESET" ; fi
        echo " - $session"
    done
}

_list_session_files() {
    local sessions session global_sessions local_sessions
    sessions=($(tmux list-sessions -F '#S' 2> /dev/null))   # running sessions
    global_sessions=($(\ls "$SESSIONS_DIR/globals"))
    local_sessions=($(\ls "$SESSIONS_DIR/locals"))

    if [ ${#global_sessions[*]} -ge 1 -o ${#local_sessions[*]} -ge 1 ]; then
        echo "$Y$SCPT_NAME global sessions:$RESET"
        _print_sessions_array ${global_sessions[*]}
        echo "$Y$SCPT_NAME local sessions:$RESET"
        _print_sessions_array ${local_sessions[*]}
    else
        echo "${R}No session files found.$RESET"
    fi

    if [ ${#sessions[*]} -ge 1 ]; then
        echo "${Y}Other running sessions:$RESET"
        for session in ${sessions[*]}; do echo " - $session" ; done
    fi
}

_print_version() {
    local version
    version='[ 0.4.0-alpha ]'
    echo "$SCPT_NAME ${G}${version}${RESET}"
}

# long flags with no hyphens
[ $1 == 'list' -o $1 == 'ls' ] && _list_session_files && exit 0 ;
[ $1 == 'help' ] && _usage && exit 0 ;
[ $1 == 'version' ] && _print_version && exit 0 ;

_echo_example_file() {
    if [ -f "$EXAMPLES_DIR/$1" ]; then
        cat "$EXAMPLES_DIR/$1"
    else
        cat "$EXAMPLES_DIR/main"
    fi
}

_new_session_file() {
    local session_file session_example dir
    if [ -z $LOCAL_SESSION ]; then dir="$SESSIONS_DIR/globals"; else dir=$PWD; fi
    session_file="$dir/$NEW_SESSION_FILE"

    [ ! -z $EXAMPLE_FILE ] && session_example=$(_echo_example_file $EXAMPLE_FILE)
    # EDITOR not explicitly set or uses vim
    # create a buffer with dummy content in $TMUXSTART_DIR
    if [[ -z $EDITOR || $EDITOR =~ 'vi' ]] ; then
        echo "$session_example" | ${EDITOR:-vi} - "+file $session_file"
    else
        echo "$session_example" > $session_file && $EDITOR $session_file
    fi
}

_set_session_file() {
    local filename
    filename=$1
    if [ -f "$LOCALS_DIR/$filename" ]; then
        echo "$LOCALS_DIR/$filename"
    else
        echo "$GLOBALS_DIR/$filename"
    fi
}
_open_session_file() {
    local session_file dir
    session_file=$(_set_session_file $1)

    if [ -f $session_file ]; then
        ${EDITOR:-vi} $session_file
    else
        echo "${R}Session file not found.$RESET"
    fi
}

_delete_session_file() {
    local session_file confirm filename
    filename=$1
    session_file=$(_set_session_file $filename)
    if [ -f $session_file ]; then
        echo "${R}Are you sure you want to remove \"$filename\"? [y/N]$RESET"
        read confirm
        [[ $confirm =~ 'y' ]] && rm -v $session_file && exit 0
    else
        echo "Session file for \"$filename\" not found."
    fi
    exit 1
}

_link_session_file() {
    if [ -f "./$OPTARG" -a ! -f "$SESSIONS_DIR/locals/$OPTARG" ]; then
        ln -s "$PWD/$OPTARG" "$SESSIONS_DIR/locals" && exit 0;
    fi
    exit 1
}


# arguments parsing loop
while getopts ':hle:n:vc:o:d:-' option; do
    case "$option" in
        h)
            _usage ; exit 0 ;;
        c)
            _link_session_file ;;
        d)
            _delete_session_file $OPTARG ;;
        e)
            EXAMPLE_FILE=$OPTARG ;;
        n)
            NEW_SESSION_FILE=$OPTARG ;;
        l)
            LOCAL_SESSION=1 ;;
        o)
            _open_session_file $OPTARG ; exit 0 ;;
        v)
            _print_version ; exit 0 ;;
        -)
            case "$OPTARG" in
                -list)
                    _list_session_files ; exit 0 ;;
                -help)
                    _usage ; exit 0 ;;
                -version)
                    _print_version ; exit 0 ;;
            esac ;;
        :)
            echo "Option -$OPTARG requires an argument." ; _usage ; exit 1 ;;
        *)
            echo "Invalid option" ; _usage ; exit 1 ;;
    esac
done

[ ! -z $NEW_SESSION_FILE ] && _new_session_file && exit 0

# Some helper functions for simpler session files
new_session() {
    # Set default path based on $path variable if defined
    [ "$path" ] && cd "$path"
    tmux new-session -d -s $session "$@"
    [ "$path" ] && set_path "$path"
}
new_window() { tmux new-window -d -t $session "$@"; }
rename() { tmux rename-window -t $session:"$@"; }
kill_window() { tmux kill-window -t $session:"$@"; }
select_pane() { tmux select-pane -t $session:"$@"; }
select_window() { tmux select-window -t $session:"$@"; }
select_layout() { tmux select-layout -t $session:"$@"; }
send_keys() { tmux send-keys -t $session:"$@"; }
send_line() { send_keys "$@" "Enter"; }
set_env() { tmux set-environment -t $session "$@"; }
set_path() { tmux set-option -t $session default-path "$@"; }
split() { tmux split-window -t $session:"$@"; }
swap() { tmux swap-pane -t $session:"$@"; }

session=$1
TMUX_OLD=$TMUX
TMUX=
if ! tmux has-session -t $session 2> /dev/null ; then
    if [ -f "./$session" ]; then
        . "./$session"
    else
        if [ -f "$SESSIONS_DIR/$session" ] ; then
            cd $SESSIONS_DIR
            [ -h "./$session" ] && cd $(dirname $(readlink "$session"))
            . "./$session"
        else
            tmux new-session -d -s $session
        fi
    fi
fi
if [ "$TMUX_OLD" = "" ]; then
    tmux attach-session -t $session
else
    tmux switch-client -t $session
fi
TMUX=$TMUX_OLD
