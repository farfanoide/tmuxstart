#!/usr/bin/env bash

session_dir=${TMUXSTART_DIR:-$HOME/.tmuxstart}

# colors
reset='\e[0m'; G='\e[0;32m'; Y='\e[0;33m';

# local functions

# Print _usage information if there's not enough arguments
_usage() {
    local ts_name
    ts_name=$(basename $0)
    echo "${ts_name} options:"
    echo "=================="
    echo -e "${ts_name} tmux-session    -- ${Y} Start/Attach session ${reset}"
    echo -e "${ts_name} -h              -- ${Y} Print help menu ${reset}"
    echo -e "${ts_name} -l              -- ${Y} List all available session files ${reset}"
    echo -e "${ts_name} -o session_name -- ${Y} Edit/Create session file ${reset}"
    echo -e "${ts_name} -d session_name -- ${Y} Delete session file ${reset}"
}

[ $# -lt 1 ] && _usage && exit 1

_open_session_file() {
    local session_file session_example
    # TODO: add option to select example file
session_example="
# Make an htop window make a regular shell window\n
new_session -n htop htop\n
new_window\n
"
    session_file="${session_dir}/${OPTARG}"
    if [ ! -f $session_file ]; then
        # EDITOR not explicitly set or uses vim
        # create a buffer with dummy content in $TMUXSTART_DIR
        if [[ -z $EDITOR || $EDITOR =~ 'vi' ]] ; then
            echo "${session_example}" | ${EDITOR:-vi} - +"file ${session_file}"
        else
            echo "${session_example}" > $session_file;
            $EDITOR $session_file
        fi
    else
        ${EDITOR:-vi} $session_file
    fi
}

_delete_session_file() {
    local session_file confirm

    session_file="${session_dir}/${OPTARG}"
    if [ -f $session_file ]; then
        echo "Are you sure you want to remove \"${OPTARG}\"? [y/N]"
        read confirm
        [[ $confirm =~ 'y' ]] && rm -v $session_file && exit 0
    else
        echo "Session file for \"${OPTARG}\" not found."
        exit 1
    fi
}

_link_session_file() {
    [ -f "./$OPTARG" -a ! -f "${session_dir}/${OPTARG}" ] && ln -s "$PWD/$OPTARG" $session_dir && exit 0;
    exit 1
}

_list_session_files() {
    local sessions session

    sessions=$(\ls $session_dir)
    for session in ${sessions[@]}; do
        if tmux has-session -t $session 2> /dev/null ; then
            session="${session} ${G}(running)${reset}"
        fi
        echo -e $session
    done
}

# arguments parsing loop
while getopts ':hlc:o:d:' option; do
    case "${option}" in
        h)
            _usage ; exit 0 ;;
        c)
            _link_session_file
            ;;
        d)
            _delete_session_file
            ;;
        l)
            _list_session_files ; exit 0 ;;
        o)
            _open_session_file ; exit 0 ;;
        :)
            echo "Option -$OPTARG requires an argument."
            _usage ; exit 1 ;;
        *)
            echo "Invalid option"
            _usage ; exit 1 ;;
    esac
done

# Some helper functions for simpler session files
new_session() {
    # Set default path based on $path variable if defined
    [ "$path" ] && cd "$path"
    tmux new-session -d -s $session "$@"
    [ "$path" ] && set_path "$path"
}
new_window() { tmux new-window -d -t $session "$@"; }
rename() { tmux rename-window -t $session:"$@"; }
kill_window() { tmux kill-window -t $session:"$@"; }
select_pane() { tmux select-pane -t $session:"$@"; }
select_window() { tmux select-window -t $session:"$@"; }
select_layout() { tmux select-layout -t $session:"$@"; }
send_keys() { tmux send-keys -t $session:"$@"; }
send_line() { send_keys "$@" "Enter"; }
set_env() { tmux set-environment -t $session "$@"; }
set_path() { tmux set-option -t $session default-path "$@"; }
split() { tmux split-window -t $session:"$@"; }
swap() { tmux swap-pane -t $session:"$@"; }

session=$1
TMUX_OLD=$TMUX
TMUX=
if ! tmux has-session -t $session ; then
    if [ -f "./$session" ]; then
        . "./$session"
    else
        if [ -f "$session_dir/$session" ] ; then
            cd $session_dir
            [ -h "./$session" ] && cd $(dirname $(readlink "$session"))
            . "./$session"
        else
            tmux new-session -d -s $session
        fi
    fi
fi
if [ "$TMUX_OLD" = "" ]; then
    tmux attach-session -t $session
else
    tmux switch-client -t $session
fi
TMUX=$TMUX_OLD
